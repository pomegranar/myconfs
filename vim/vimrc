let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Swap ; and : in Normal and Visual modes
nnoremap ; :
nnoremap : ;
vnoremap ; :
vnoremap : ;

" Use 2 spaces for indentation
set expandtab       " Convert tabs to spaces
set tabstop=2       " Number of spaces that a <Tab> in the file counts for
set shiftwidth=2    " Number of spaces to use for each step of (auto)indent
set softtabstop=2   " Number of spaces that a <Tab> counts for while performing editing operations
set autoindent      " Copy indent from current line when starting a new line

" Enable relative line numbers
set number          " Show absolute line number for the current line
set relativenumber  " Show relative line numbers for other lines


call plug#begin()

" List your plugins here
Plug 'tpope/vim-sensible'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
" Vim Git integration
Plug 'tpope/vim-fugitive'
" Custom dashboard
Plug 'mhinz/vim-startify'


call plug#end()


" silent! colorscheme seoul256

let g:ascii_art = [
      \' ▄   ▄ ▄ ▄▄▄▄▄ ',
      \' ▀▄ ▄▀ █ █ █ █ ',
      \'  █▄█  █ █ █ █ ',
      \'   █   █ █ █ █ ',
      \ ]

let g:startify_custom_header = startify#pad(g:ascii_art)
let g:startify_lists = [
      \ { 'type': 'files',     'header': ['   Recent Files']       },
      \ { 'type': 'sessions',  'header': ['   Sessions']           },
      \ { 'type': 'bookmarks', 'header': ['   Bookmarks']          },
      \ ]
let g:startify_bookmarks = [
      \ { 'v': '~/.vimrc' },
      \ { 'z': '~/.zshrc' },
      \ { 'c': '~/Developer/ChatDKU/' },
      \]
